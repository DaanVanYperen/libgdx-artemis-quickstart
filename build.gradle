buildscript {
    

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        jcenter()
        google()
    }
    dependencies {
        classpath 'org.wisepersist:gwt-gradle-plugin:1.0.6'
        classpath 'com.android.tools.build:gradle:3.2.0'
        classpath 'com.mobidevelop.robovm:robovm-gradle-plugin:2.3.5'
        
        // lib for artemis-odb weaving.
        // see https://github.com/junkdog/artemis-odb/wiki/Bytecode-weaving
        classpath "net.onedaybeard.artemis:artemis-odb-gradle-plugin:2.2.0"

        // lib for artemis-odb fluid.
        classpath "net.onedaybeard.artemis:artemis-fluid-gradle-plugin:2.2.0"
    }
}

allprojects {
    apply plugin: "eclipse"
    apply plugin: "idea"

    version = '1.0'
    ext {
        appName = "my-game"
        quickstartVersion = '0.7'
        gdxVersion = '1.9.9'
        roboVMVersion = '2.3.5'
        artemisVersion = '2.2.0' // update gradle plugins above as well!
        artemisContribVersion = '2.4.0'
        //box2DLightsVersion = '1.4'
        //ashleyVersion = '1.7.0'
        //aiVersion = '1.8.0'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        google()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    }
}

project(":desktop") {
    apply plugin: "java"


    dependencies {
        compile project(":core")
        compile "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
// Optional LibGDX Modules
//        compile "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-desktop"
//        compile "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-desktop"
//        compile "com.badlogicgames.gdx:gdx-bullet-platform:$gdxVersion:natives-desktop"
//        compile "com.badlogicgames.gdx:gdx-tools:$gdxVersion"
//        compile "com.badlogicgames.gdx:gdx-controllers-desktop:$gdxVersion"
//        compile "com.badlogicgames.gdx:gdx-controllers-platform:$gdxVersion:natives-desktop"
        
    }
}

project(":android") {
    apply plugin: "android"

    configurations { natives }

    dependencies {
        compile project(":core")
        compile "com.badlogicgames.gdx:gdx-backend-android:$gdxVersion"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi-v7a"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-arm64-v8a"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86_64"

// Optional LibGDX Modules
//        compile "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
//        natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-armeabi"
//        natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-armeabi-v7a"
//        natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-arm64-v8a"
//        natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-x86"
//        natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-x86_64"
//        compile "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
//        natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-armeabi"
//        natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-armeabi-v7a"
//        natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-arm64-v8a"
//        natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-x86"
//        natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-x86_64"
//        compile "com.badlogicgames.gdx:gdx-bullet:$gdxVersion"
//        natives "com.badlogicgames.gdx:gdx-bullet-platform:$gdxVersion:natives-armeabi"
//        natives "com.badlogicgames.gdx:gdx-bullet-platform:$gdxVersion:natives-armeabi-v7a"
//        natives "com.badlogicgames.gdx:gdx-bullet-platform:$gdxVersion:natives-arm64-v8a"
//        natives "com.badlogicgames.gdx:gdx-bullet-platform:$gdxVersion:natives-x86"
//        natives "com.badlogicgames.gdx:gdx-bullet-platform:$gdxVersion:natives-x86_64"
//        compile "com.badlogicgames.gdx:gdx-controllers:$gdxVersion"
//        compile "com.badlogicgames.gdx:gdx-controllers-android:$gdxVersion"
//        compile "com.badlogicgames.box2dlights:box2dlights:$box2DLightsVersion"
//        compile "com.badlogicgames.gdx:gdx-ai:$aiVersion"
        
    }
}

project(":ios") {
    apply plugin: "java"
    apply plugin: "robovm"


    dependencies {
        compile project(":core")
        compile "com.mobidevelop.robovm:robovm-rt:$roboVMVersion"
        compile "com.mobidevelop.robovm:robovm-cocoatouch:$roboVMVersion"
        compile "com.badlogicgames.gdx:gdx-backend-robovm:$gdxVersion"

// Optional LibGDX Modules
//        compile "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-ios"
//        compile "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-ios"
//        compile "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-ios"
//        compile "com.badlogicgames.gdx:gdx-bullet-platform:$gdxVersion:natives-ios"
        
    }
}

project(":html") {
    apply plugin: "gwt"
    apply plugin: "war"


    dependencies {
        compile project(":core")
        compile "com.badlogicgames.gdx:gdx-backend-gwt:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx:$gdxVersion:sources"
        compile "com.badlogicgames.gdx:gdx-backend-gwt:$gdxVersion:sources"

// Optional LibGDX Modules
//        compile "com.badlogicgames.gdx:gdx-box2d:$gdxVersion:sources"
//        compile "com.badlogicgames.gdx:gdx-box2d-gwt:$gdxVersion:sources"
//        compile "com.badlogicgames.gdx:gdx-controllers:$gdxVersion:sources"
//        compile "com.badlogicgames.gdx:gdx-controllers-gwt:$gdxVersion"
//        compile "com.badlogicgames.gdx:gdx-controllers-gwt:$gdxVersion:sources"
//        compile "com.badlogicgames.box2dlights:box2dlights:$box2DLightsVersion:sources"
//        compile "com.badlogicgames.gdx:gdx-ai:$aiVersion:sources"

        // artemis-odb core
        compile "net.onedaybeard.artemis:artemis-odb-gwt:$artemisVersion"
        compile "net.onedaybeard.artemis:artemis-odb-gwt:$artemisVersion:sources"
        compile "net.onedaybeard.artemis:artemis-odb:$artemisVersion:sources"
        
        // artemis-odb  + serialization
        compile "net.onedaybeard.artemis:artemis-odb-serializer:$artemisVersion:sources"
        compile "net.onedaybeard.artemis:artemis-odb-serializer-json-libgdx:$artemisVersion:sources"

        // Artemis-odb optional functionality (systems, events, components).
        compile "net.mostlyoriginal.artemis-odb:contrib-core:$artemisContribVersion:sources"
        //compile "net.mostlyoriginal.artemis-odb:contrib-jam:$artemisContribVersion:sources"
        //compile "net.mostlyoriginal.artemis-odb:contrib-eventbus:$artemisContribVersion:sources"
        //compile "net.mostlyoriginal.artemis-odb:contrib-plugin-operations:$artemisContribVersion:sources"
        compile "net.mostlyoriginal.artemis-odb:contrib-plugin-profiler:$artemisContribVersion:sources"        
    }
}

// Put odb components in this project.
project(":components") {
    apply plugin: "java"

    dependencies {
        // components to expose
        compile "net.onedaybeard.artemis:artemis-odb:$artemisVersion"
        compile "net.mostlyoriginal.artemis-odb:contrib-core:$artemisContribVersion"
        //compile "net.mostlyoriginal.artemis-odb:contrib-jam:$artemisContribVersion"

        compile "com.badlogicgames.gdx:gdx:$gdxVersion"
    }
}

// Game logic and systems
project(":core") {
    apply plugin: "java"
    
    configurations {
        provided
    }

    sourceSets {
        // run the annotation processor compile time.
        main {
            compileClasspath += configurations.provided
        }
    }

    dependencies {
        compile project(":components")
        compile "com.badlogicgames.gdx:gdx:$gdxVersion"

        compileOnly "net.onedaybeard.artemis:artemis-fluid-core:$artemisVersion"
        
// Optional LibGDX Modules
//        compile "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
//        compile "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
//        compile "com.badlogicgames.gdx:gdx-bullet:$gdxVersion"
//        compile "com.badlogicgames.gdx:gdx-controllers:$gdxVersion"
//        compile "com.badlogicgames.box2dlights:box2dlights:$box2DLightsVersion"
//        compile "com.badlogicgames.gdx:gdx-ai:$aiVersion"

        // Artemis-odb
        compile "net.onedaybeard.artemis:artemis-odb:$artemisVersion"
        compile "net.onedaybeard.artemis:artemis-odb-serializer-json-libgdx:$artemisVersion"

        // Artemis-odb bonus functionality (systems, events, components).
        compile "net.mostlyoriginal.artemis-odb:contrib-core:$artemisContribVersion"
        //compile "net.mostlyoriginal.artemis-odb:contrib-jam:$artemisContribVersion"
        //compile "net.mostlyoriginal.artemis-odb:contrib-eventbus:$artemisContribVersion"
        //compile "net.mostlyoriginal.artemis-odb:contrib-plugin-operations:$artemisContribVersion"
        compile "net.mostlyoriginal.artemis-odb:contrib-plugin-profiler:$artemisContribVersion"

        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
    }
}

// dependency matrix does not output component usage when using fluid entities.
project(":matrix") {
    apply plugin: "java"

    dependencies {
        compile project(":core")
        compile "net.onedaybeard.ecs:matrix-cli:0.2.0"
    }

    task generateMatrix(type: JavaExec) {
        classpath = sourceSets.main.runtimeClasspath
        main = 'com.artemis.cli.CliApplication'
        args '-c', "$rootProject.projectDir\\core\\build\\classes\\java\\main\\", '-l', "$rootProject.ext.appName"
    }
    build.finalizedBy generateMatrix
}

tasks.eclipse.doLast {
    delete ".project"
}